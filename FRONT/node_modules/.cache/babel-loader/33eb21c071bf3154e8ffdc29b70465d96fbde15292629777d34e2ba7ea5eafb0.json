{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elias\\\\Desktop\\\\Repo\\\\FRONT\\\\src\\\\components\\\\AccountList\\\\AccountList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./AccountList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AccountList({\n  accounts,\n  showAccountDetails\n}) {\n  _s();\n  const segmentSizes = [5, 4, 4];\n  const [currentPage, setCurrentPage] = useState(0);\n  const totalSegments = segmentSizes.length;\n  const currentSegment = Math.min(currentPage, totalSegments - 1);\n  const handlePageChange = newPage => {\n    if (newPage >= 0 && newPage < totalSegments) {\n      setCurrentPage(newPage);\n    }\n  };\n  const startIndex = segmentSizes.slice(0, currentSegment).reduce((acc, size) => acc + size, 0);\n  const endIndex = startIndex + segmentSizes[currentSegment];\n  const currentAccounts = accounts.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination,\n      children: [currentSegment > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentSegment - 1),\n        className: styles.paginationButton,\n        children: \"<< Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), currentAccounts.map((account, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showAccountDetails(account),\n        className: styles.accountButton,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: account.tipo_letras\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Nro: \", account.n]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), currentSegment < totalSegments - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentSegment + 1),\n        className: styles.paginationButton,\n        children: \"Siguiente >>\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(AccountList, \"kF5zyetxw6M8BnbNC3J8pG5ccpI=\");\n_c = AccountList;\nexport default AccountList;\nvar _c;\n$RefreshReg$(_c, \"AccountList\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","AccountList","accounts","showAccountDetails","_s","segmentSizes","currentPage","setCurrentPage","totalSegments","length","currentSegment","Math","min","handlePageChange","newPage","startIndex","slice","reduce","acc","size","endIndex","currentAccounts","children","className","pagination","onClick","paginationButton","fileName","_jsxFileName","lineNumber","columnNumber","map","account","index","accountButton","tipo_letras","n","_c","$RefreshReg$"],"sources":["C:/Users/elias/Desktop/Repo/FRONT/src/components/AccountList/AccountList.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./AccountList.module.css\";\r\n\r\ninterface Account {\r\n  moneda: string;\r\n  saldo: number;\r\n  tipo_letras: string;\r\n  n: number;\r\n}\r\n\r\ninterface Props {\r\n  accounts: Account[];\r\n  showAccountDetails: (account: Account) => void;\r\n}\r\n\r\nfunction AccountList({ accounts, showAccountDetails }: Props) {\r\n  const segmentSizes = [5, 4, 4];\r\n\r\n  const [currentPage, setCurrentPage] = useState<number>(0);\r\n  const totalSegments = segmentSizes.length;\r\n  const currentSegment = Math.min(currentPage, totalSegments - 1);\r\n\r\n  const handlePageChange = (newPage: number) => {\r\n    if (newPage >= 0 && newPage < totalSegments) {\r\n      setCurrentPage(newPage);\r\n    }\r\n  };\r\n\r\n  const startIndex = segmentSizes\r\n    .slice(0, currentSegment)\r\n    .reduce((acc, size) => acc + size, 0);\r\n  const endIndex = startIndex + segmentSizes[currentSegment];\r\n  const currentAccounts = accounts.slice(startIndex, endIndex);\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.pagination}>\r\n        {currentSegment > 0 && (\r\n          <button\r\n            onClick={() => handlePageChange(currentSegment - 1)}\r\n            className={styles.paginationButton}\r\n          >\r\n            {\"<< Anterior\"}\r\n          </button>\r\n        )}\r\n        {currentAccounts.map((account, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => showAccountDetails(account)}\r\n            className={styles.accountButton}\r\n          >\r\n            <p>{account.tipo_letras}</p>\r\n            <p>Nro: {account.n}</p>\r\n          </button>\r\n        ))}\r\n        {currentSegment < totalSegments - 1 && (\r\n          <button\r\n            onClick={() => handlePageChange(currentSegment + 1)}\r\n            className={styles.paginationButton}\r\n          >\r\n            {\"Siguiente >>\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AccountList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}